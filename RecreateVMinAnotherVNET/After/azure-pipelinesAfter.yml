trigger:
  - none

pool:
   vmImage: ubuntu-latest

stages:
- stage: "STAGE1"
  jobs:
    - job: PowerShell
      displayName: PowerShell
      pool:
       vmImage: ubuntu-latest
      steps:
      - checkout: self
      - task: AzurePowerShell@5
        inputs:
          azureSubscription: <Service Connection Name>
          scriptType: filePath
          scriptPath: $(Build.SourcesDirectory)/After/PowerShell.ps1
          azurePowerShellVersion: latestVersion
          pwsh: true
- stage: "STAGE2"
  jobs:
    - job: Validate
      displayName: Terraform Validate
      pool:
       vmImage: ubuntu-latest
      steps:
      - checkout: self
      - task: TerraformInstaller@0
        displayName: Install Terraform latest
      - task: TerraformTaskV2@2
        displayName: 'Terraform : Init'
        inputs:
          workingdirectory: After/
          backendServiceArm: '<Service Connection Name>'
          backendAzureRmResourceGroupName: <Resource Group Name>
          backendAzureRmStorageAccountName: <Storage Account for TF State>
          backendAzureRmContainerName: <Storage Container for TF State>
          backendAzureRmKey: <TF State File>
      - task: TerraformTaskV2@2
        displayName: 'Terraform : Validate'
        inputs:
          workingdirectory: After/
          command: validate
    - job: Deploy
      displayName: Terraform Deploy
      pool:
        vmImage: ubuntu-latest
      steps:
      - checkout: self
      - task: TerraformInstaller@0
        displayName: Install Terraform latest
      - task: TerraformTaskV2@2
        displayName: 'Terraform : Init'
        inputs:
          workingdirectory: After/
          backendServiceArm: '<Service Connection Name>'
          backendAzureRmResourceGroupName: <Resource Group Name>
          backendAzureRmStorageAccountName: <Storage Account for TF State>
          backendAzureRmContainerName: <Storage Container for TF State>
          backendAzureRmKey: <TF State File>
      - task: TerraformTaskV2@2
        displayName: 'Terraform : Plan'
        inputs:
          workingdirectory: After/
          command: plan
          environmentServiceNameAzureRM: '<Service Connection Name>'
      - task: TerraformTaskV2@2
        displayName: 'Terraform : Validate and Apply'
        inputs:
          workingdirectory: After/
          command: apply
          environmentServiceNameAzureRM: '<Service Connection Name>'
